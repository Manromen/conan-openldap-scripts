
# C++ project
language: cpp

# Use Ubuntu 16.04 (Xenial)
dist: xenial

# Only build master and tags
if: branch = master OR tag IS present

git:
    submodules: true

env:
  global:
    - BINTRAY_USER=manromen
    # BINTRAY_KEY
    - secure: "LiJeGXAnNOQu09WPLdAsqI9dXDGDdOCAlDBX4cGxNqfYwC2M3ANcuzT77DooVVD1G6gPE0xV4STQAisUHyujeYizV3dApqhrrwATLLgSO8u+QgD1OsOpHH3oWBTS0aVcIOnfDP+GRUmOMWe3PSoIDWwBkxsc6xnu0FnMZqN/yq5SXxkpHDU/FVWRb4wM80t5NzOiUUIzfKEyu6IYYQ55Si357mfvSPYuphWMP0d4VAVAdL+PZ1x88MYNIGB63j7D5CTrQhUrMimGSfvJbzSfv8QtABTaeIDIQXu4pc+rK2SxoYFU52eviVk+bH4Vwm1RtL3zT5uSlAoNmuk1PzFGUquL17rmadFbCeQzNtnm++rNe4Lu0T5H08NI3W50239cFVeTBImM2Yk3z8b5G6XJa5S9PhItsUlm+3X9MGGEPSc/lFu7EXukifaDZwS+TVfo78CJ0t/GNZJ2XoFHcCjy5u+/RSbIPXetpmxNahDrORB1rywI73hMFpROJGxVEDt6jP6uinZQXXmDlghOgvncVlmLornVa56R8gofbkurQ69vKLQmZBiinKj6g0J7lZnZ+Oa8GwZioNfy1sA8JAnDK9se+aVCG4m0XgiLixXMuAL0qpes5BT8g5FLiwxD6Bx5WBWpYasMknSmF64HMeX62fZ4qmfk1GXGeGXIH2R6AOQ="
    - CONAN_REPOSITORY=https://api.bintray.com/conan/manromen/rgpaul
    - CONAN_REPOSITORY_NAME=rgpaul
    - CONAN_USER=rgpaul
    - CONAN_CHANNEL=stable
    - LIBRARY_VERSION=2.4.46

### before installing deps
before_install:
  # Download Android NDK from Google
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CI_TARGET_PLATFORM" == "android" ]]; then
      curl -sSOL "https://dl.google.com/android/repository/android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip";
      unzip -q -o android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip;
    fi

### install deps
install:

  # Install python for windows
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco install python3;
    fi

  # Install conan
  - pip3 install conan

  # Add conan repository and apply conan config
  - conan remote add ${CONAN_REPOSITORY_NAME} ${CONAN_REPOSITORY}
  - conan config install ${TRAVIS_BUILD_DIR}/.travis/conan/config.zip

  # login to conan
  - conan user -p "$BINTRAY_KEY" -r ${CONAN_REPOSITORY_NAME} ${BINTRAY_USER}

### build script
script:
  # show OS/compiler version
  - uname -a

  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # macOS Builds
  - if [ "$CI_TARGET_PLATFORM" == "macos" ]; then
      export MACOS_SDK_VERSION=$(xcodebuild -showsdks | grep macosx | awk '{print $4}' | sed 's/[^0-9,\.]*//g');
      echo "macOS SDK ${MACOS_SDK_VERSION}";
      conan create . openldap/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=Macos -s os.version=${MACOS_SDK_VERSION} -s arch=${CI_TARGET_ARCH} -s build_type=${CI_TARGET_BUILD_TYPE} -o shared=False;
    fi

  # iOS Builds
  - if [ "$CI_TARGET_PLATFORM" == "ios" ]; then
      export IOS_SDK_VERSION=$(xcodebuild -showsdks | grep iphoneos | awk '{print $4}' | sed 's/[^0-9,\.]*//g');
      echo "iOS SDK ${IOS_SDK_VERSION}";
      
      travis_wait 60 conan create . openldap/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=iOS -s os.version=${IOS_SDK_VERSION} -s arch=${CI_TARGET_ARCH} -s build_type=${CI_TARGET_BUILD_TYPE} -o shared=False;
    fi

deploy:
  provider: script
  script: bash .travis/conan-deploy.sh
  on:
    tags: true
    all_branches: true

### build matrix
matrix:
  include:
      
    # iOS - Release
    - os: osx
      osx_image: xcode11
      compiler: clang
      env:
        - CI_TARGET_PLATFORM=ios
        - CI_TARGET_ARCH=armv8
        - CI_TARGET_BUILD_TYPE=Release

      # iOS - Debug
#    - os: osx
#      osx_image: xcode10.2
#      compiler: clang
#      env:
#        - CI_TARGET_PLATFORM=ios
#        - CI_TARGET_ARCH=armv8
#        - CI_TARGET_BUILD_TYPE=Debug

    # iOS - Simulator
#    - os: osx
#      osx_image: xcode10.2
#      compiler: clang
#      env:
#        - CI_TARGET_PLATFORM=ios
#        - CI_TARGET_ARCH=x86_64
#        - CI_TARGET_BUILD_TYPE=Debug

    # macOS - Release
#    - os: osx
#      osx_image: xcode10.2
#      compiler: clang
#      env:
#        - CI_TARGET_PLATFORM=macos
#        - CI_TARGET_ARCH=x86_64
#        - CI_TARGET_BUILD_TYPE=Release

    # macOS - Debug
#    - os: osx
#      osx_image: xcode10.2
#      compiler: clang
#      env:
#        - CI_TARGET_PLATFORM=macos
#        - CI_TARGET_ARCH=x86_64
#        - CI_TARGET_BUILD_TYPE=Debug
